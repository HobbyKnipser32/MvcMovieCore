@model global::MvcMoviesCore.Models.Person

@{
    ViewData["Title"] = "Person-Details";
    var adultPersonType = ViewData["AdultPersonType"];
    var imgSrc = ViewData["ImageSource"].ToString();
    var person = Model.Name;
    var natImgSrc = ViewData["OriginalFileDirectory"].ToString() + "/flags/" + Model.Nationality.Name + ".png";
    var originalFileDirectory = ViewData["OriginalFileDirectory"].ToString();
}
<div class="container-fluid">
    <h2>@Html.DisplayFor(model => model.Name) (@Html.DisplayFor(model => model.ActorsAge))</h2>
    <hr />
    <div class="row">
        <div class="col-sm-2">
            <div class="card">
                <div class="card-body">
                    @if (string.IsNullOrEmpty(imgSrc))
                    {
                        <div class="image-container">
                            <img src="~/images/noimageexists.png" style="display:block; margin-left:auto; margin-right:auto; width:90%" />
                        </div>
                    }
                    else
                    {
                        @if (Model.PersonImages.Count == 1)
                        {
                            var personImages = Model.PersonImages.ToList();
                            var singleImgSrc = $"{originalFileDirectory}/{personImages[0].PersonId}/{personImages[0].Name}";
                            <div class="image-container">
                                <img class="image-small" src="@singleImgSrc" style="display:block; margin-left:auto; margin-right:auto; max-height:185px; max-width:90%" />
                                <img class="image-large" src="@singleImgSrc" />
                            </div>
                        }
                        else
                        {
                            <div class="w3-content w3-section">
                                @foreach (var image in Model.PersonImages)
                                {
                                    var src = $"{originalFileDirectory}/{image.PersonId}/{image.Name}";
                                    <img class="mySlides w3-animate-fading" src="@src" style="display:block; margin-left:auto; margin-right:auto; max-height:90%; max-width:90%" />
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <div class="col-sm-9">
            <div class="card">
                <div class="card-body">
                    <div class="col-sm-12">
                        <div class="row">
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label asp-for="Sex.Name" class="control-label">Geschlecht: </label>
                                    @Html.DisplayFor(model => model.Sex.Name)
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label asp-for="ActorsAge" class="control-label">aktuelles Alter: </label>
                                    @Html.DisplayFor(model => model.ActorsAge)
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label asp-for="Birthday" class="control-label">Geburtstag: </label>
                                    @Html.DisplayFor(model => model.Birthday)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="row">
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label asp-for="PersonType.Name" class="control-label">Type: </label>
                                    @Html.DisplayFor(model => model.PersonType.Name)
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label asp-for="Nationality.Name" class="control-label">Nationalität: </label>
                                    <img src="@natImgSrc" style="max-width: 100%; max-height: 16px" title="@Model.Nationality.Description" />
                                    @Html.DisplayFor(model => model.Nationality.Name)
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label asp-for="Classification" class="control-label">Klassifizierung: </label>
                                    @Html.DisplayFor(model => model.Classification)
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="row">
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label asp-for="Height" class="control-label">Größe: </label>
                                    @Html.DisplayFor(model => model.Height)
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label asp-for="Weight" class="control-label">Gewicht: </label>
                                    @Html.DisplayFor(model => model.Weight)
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label asp-for="Obit" class="control-label">Todestag: </label>
                                    @Html.DisplayFor(model => model.Obit)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12" style="display:none" id="adultStuff">
                        <div class="row">
                            <div class="col-sm-3">
                                <div class="form-group">
                                    <label for="cupSize" class="form-label">Cupsize:</label>
                                    @Html.DisplayFor(model => model.CupSize)
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    <label for="fakeBoobs" class="form-label">Fakeboobs:</label>
                                    @Html.DisplayFor(model => model.FakeBoobs)
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    <label for="startOfBusiness" class="form-label">Start of Business:</label>
                                    @Html.DisplayFor(model => model.StartOfBusiness)
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    <label for="endOfBusiness" class="form-label">End of Business:</label>
                                    @Html.DisplayFor(model => model.EndOfBusiness)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <p>
            <a asp-action="Edit" asp-route-id="@Model.Id">
                <i class="fa-solid fa-pen fa-bounce" style="color: #74C0FC;  --fa-animation-duration: 2s;"></i>
            </a>
        </p>
        <hr />
        <ul class="nav nav-tabs">
            <li>
                <a data-toggle="tab" href="#moviesTab" class="nav-link nav-link-teal active" style="border: 1px solid #00677f">Filme</a>
            </li>
            <li>
                <a data-toggle="tab" href="#scenesTab" class="nav-link nav-link-violett" style="border: 1px solid rgb(108, 27, 123)">Drehpartner</a>
            </li>
        </ul>

        <div class="tab-content">
            <div id="moviesTab" class="tab-pane active">
                <table class="table display" id="personMovies">
                    <thead>
                        <tr>
                            <th>Film</th>
                            <th>Erscheinungsjahr</th>
                            <th>Alter</th>
                            @if (Model.PersonType.Name.Contains("adult", StringComparison.CurrentCultureIgnoreCase))
                            {
                                <th>Praxis</th>
                            }
                            else
                            {
                                <th>Rolle</th>
                            }
                            <th>OnWatch</th>
                            <th>Bewertung</th>
                            <th>Laufzeit</th>
                            <th>&nbsp;</th>
                        </tr>
                    </thead>
                    @* <tbody>
                        @foreach (var item in Model.MoviesPerson)
                        {
                            <tr>
                                <td>
                                    <a asp-controller="Movies" asp-action="Details" asp-route-id="@item.Movies.Id">
                                        @Html.DisplayFor(modelItem => item.Movies.Name)
                                    </a>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Movies.YearOfPublication)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Movies.ActorsAge)
                                </td>
                                <td>
                                    @if (string.IsNullOrEmpty(item.Practices))
                                    {
                                        @if (item.MovieRole != null)
                                        {
                                            <a asp-controller="MovieRole" asp-action="Details" asp-route-id="@item.MovieRole.Id">
                                                @Html.DisplayFor(modelItem => item.MovieRole.Name)
                                            </a>
                                        }
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => item.Practices)
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Movies.OnWatch)
                                </td>
                                <td style="text-align:right">
                                    @Html.DisplayFor(modelItem => item.Movies.Ranking)
                                </td>
                                <td style="text-align:right">
                                    @Html.DisplayFor(modelItem => item.Movies.RunTime)
                                </td>
                                <td style="text-align:center">
                                    <a title="löschen" onclick="deleteMovie('@item.MoviesId', '@item.Movies.Name')">
                                        <i class="fa-solid fa-trash fa-fade" style="color: #ff0000; --fa-animation-duration: 2s;"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody> *@
                </table>
            </div>
            <div id="scenesTab" class="tab-pane">
                <table id="personScenes" class="table table-striped table-no-bordered table-hover" style="width: 100%; word-wrap:break-word; table-layout: auto;">
                    <thead>
                        <tr>
                            <th class="col-3">Person</th>
                            <th class="col-4">Film</th>
                            <th class="col-2">Szene</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
        <hr />
        <p>
            <a asp-action="Index" title="zurück zur Liste">
                <i class="fa-regular fa-circle-left fa-shake fa-2xl" style="color: #74C0FC; --fa-animation-duration: 2s;"></i>
            </a>
        </p>
    </div>
</div>

<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">

@section Scripts
{
    <partial name="_DataTableScripts" />
    <partial name="_ShowImageModalScripts" />

    <script>
        $(document).ready(function () {
            const personId = '@Model.Id';
            $('#personMovies').DataTable({
                ordering: true,
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                iDisplayLength: 25,
                fixedHeader: {
                    header: true,
                },
                ajax: {
                    url: appRootPath + '/api/PersonApi/GetMovies/' + personId,
                    dataSrc: ''
                },
                columns: [
                    {
                        width: '30%',
                        data: 'Name',
                        render: function(data, type, full){
                            if (data && type === 'display'){
                                var url = '@Url.Action("Details", "Movies")' + '/' + full.Id;
                                return '<a href="' + url + '">' + data;
                            }
                             return '';
                        }
                    },
                    {
                        width: '13%',
                        data: 'Erscheinungsjahr',
                        className: 'dt-body-right'
                    },
                    {
                        width: '5%',
                        data: 'Alter',
                        className: 'dt-body-center'
                    },
                    {
                        width: '25%',
                        data: 'Role',
                        render: function(data, type, full){
                            if (data){
                                if (full.Praxis === null){
                                    return data;
                                }
                                else{
                                    return full.Praxis;
                                }
                            }
                            else{
                                return '';
                            }
                        }
                    },
                    { 
                        width: '7%',
                        data: 'OnWatch',
                        className: 'dt-body-center'
                    },
                    { 
                        width: '10%',
                        data: 'Bewertung',
                        className: 'dt-body-right'
                    },
                    { 
                        width: '8%',
                        data: 'Laufzeit',
                        className: 'dt-body-right'
                    },
                    { 
                        width: '7%',
                        data: 'Id',
                        render: function(data, type, full){
                            if (data && type === 'display'){
                                let movieId = "'" + data + "'";
                                let movie = "'" + full.Name + "'";
                                return '<a title="löschen" onclick="deleteMovie(' + movieId + ', ' + movie + ')">' +
                                        '<i class="fa-solid fa-trash fa-fade" style="color: #ff0000; --fa-animation-duration: 2s;"></i>'
                            }
                            return '';
                        },
                        className: 'dt-body-center'
                    }
                ],
                searchHighlight: true
            });
            var groupColumn = 0;
            $('#personScenes').DataTable({
                columnDefs: [{ visible: false, targets: groupColumn }],
                order: [[groupColumn, 'asc']],
                ajax: {
                    url: appRootPath + '/api/PersonApi/GetScenes/' + personId,
                    dataSrc: ''
                },
                columns: [
                    { data: 'Person' },
                    {
                        data: 'Film',
                        render: function (data, type) {
                            if (data && type === 'display') {
                                var url = '@Url.Action("Details", "Movies")' + '/' + data.Id;
                                return '<a href="' + url + '">' + data.Name; /*  + '< /a>'; */
                            }
                            return '';
                        }
                    },
                    { data: 'Szene' }
                ],
                ordering: true,
                paging: false,
                searching: false,
                fixedHeader: {
                    header: true,
                },
                searchHighlight: true,
                drawCallback: function (settings) {
                    var api = this.api();
                    var rows = api.rows({ page: 'current' }).nodes();
                    var last = null;

                    api.column(groupColumn, { page: 'current' })
                        .data()
                        .each(function (group, i) {
                            if (last !== group) {
                                $(rows)
                                    .eq(i)
                                    .before(
                                        '<tr class="group" style="background-color:powderblue;"><td colspan="5">' +
                                        group +
                                        '</td></tr>'
                                    );

                                last = group;
                            }
                        });
                }
            });

            $('#personDetails tbody').on('click', 'tr.group', function () {
                var currentOrder = table.order()[0];
                if (currentOrder[0] === groupColumn && currentOrder[1] === 'asc') {
                    table.order([groupColumn, 'desc']).draw();
                }
                else {
                    table.order([groupColumn, 'asc']).draw();
                }
            });

            var adultPersonType = '@adultPersonType';
            var modelPersonType = '@Model.PersonTypesId.ToString()';

            if (modelPersonType === adultPersonType) {
                $('#adultStuff').show();
            }
            else {
                $('#adultStuff').hide();
            };

            $('.image-container').on('mouseenter', function () {
                onMouseEnter(this);
            });
            $('.image-container').on('mouseleave', function () {
                onMouseLeave(this);
            });
        })

        var myIndex = 0;
        carousel();

        function carousel() {
            var i;
            var x = document.getElementsByClassName("mySlides");
            if (x.length <= 0)
                return;
            for (i = 0; i < x.length; i++) {
                x[i].style.display = "none";
            }
            myIndex++;
            if (myIndex > x.length) { myIndex = 1 }
            x[myIndex - 1].style.display = "block";
            setTimeout(carousel, 9000); // Change image every 9 seconds
        }

        function deleteMovie(id, movie) {
            Swal.fire({
                html: 'Film: <b>' + movie + '</b> löschen?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Ja',
                cancelButtonText: 'Nein'
            }).then(function (result) {
                if (result.value) {
                    var url = appRootPath + '/api/MoviesApi/DeleteMovie/' + id;
                    $.ajax({
                        url: url,
                        type: 'POST',
                        async: false,
                        statusCode: {
                            404: function () {
                                alert("function not found");
                            }
                        },
                        success: function () {
                            $('#personMovies').DataTable().ajax.reload();
                            Swal.fire({
                                icon: 'success',
                                text: 'Verknüpfung erfolgreich gelöscht.',
                                showConfirmButton: false,
                                timer: 2000
                            });
                        },
                    })
                };
            });
        };
    </script>
}
