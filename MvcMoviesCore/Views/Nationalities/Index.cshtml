@model IEnumerable<MvcMoviesCore.Models.Nationality>

@{
    ViewData["Title"] = "Nationalitäten";
    var originalFileDirectory = ViewData["OriginalFileDirectory"].ToString();
}
<h2>Nationalitäten</h2>
<p>
    <a asp-action="Create" title="Nationalität hinzufügen">
        <i class="fa-regular fa-square-plus fa-beat fa-2xl" style="color: #63E6BE;  --fa-animation-duration: 2s;"></i>
    </a>
</p>
<table id="nationalitiesIndex" class="table table-striped cell-border table-hover compact" cellspacing="0" style="width: 100%; word-wrap:break-word; table-layout: auto;">
    <thead>
        <tr>
            <th style="max-width: 50px"></th>
            <th>Nationalität</th>
            <th>Beschreibung</th>
            <th>Anzahl</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
</table>

@section Scripts
{
    <partial name="_DataTableScripts" />

    <script>
        $(document).ready(function () {
            $('#nationalitiesIndex').DataTable({
                ajax: {
                    url: appRootPath + '/api/NationalityApi',
                    dataSrc: ''
                },
                columns: [
                    {
                        data: 'Id',
                        render: function (data, type, full) {
                            if (data && type === 'display') {
                                var imgSrc = "@originalFileDirectory" + "/flags/" + full["Name"] + ".png";
                                return '<img src="' + imgSrc + '" style="max-width: 50px; max-heigth: 100%" />';
                            }
                            return '';
                        }
                    },
                    {
                        data: 'Id',
                        render: function (data, type, full) {
                            if (data && type === 'display') {
                                var url = '@Url.Action("FilterNationality", "Person")' + '/' + data;
                                return '<a href="' + url + '" title="Filter Nationalität">' + full['Name'];
                            }
                            return '';
                        }
                    },
                    { data: 'Description' },
                    { data: 'Count', type: 'num', class:'dt-body-right', render: ['number', '.', ',', 0] },
                    {
                        data: 'Id',
                        render: function (data, type) {
                            if (data && type === 'display') {
                                var url = '@Url.Action("Edit", "Nationalities")' + '/' + data;
                                return '<a href="' + url + '" title="Nationalität bearbeiten">' +
                                    '<i class="fa-solid fa-pen fa-bounce" style="color: #74C0FC; --fa-animation-duration: 2s;"></i>';
                            }
                            return '';
                        }, 
                        class:'dt-body-center'
                    },
                    {
                        data: 'Id',
                        render: function (data, type) {
                            if (data && type === 'display') {
                                var id = "'" + data + "'";
                                return '<button name="id" style="background-color: transparent; color: red; border: hidden"' +
                                    'onClick="deleteLink(' + id + ')" title="Nationalität löschen">' +
                                    '<i class="fa-regular fa-trash-can fa-fade" style="color: #ff0000; --fa-animation-duration: 2s;"></i>';
                            }
                            return '';
                        }, 
                        class:'dt-body-center'
                    },
                ],
                ordering: true,
                fixedHeader: {
                    header: true,
                    footer: false
                },
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                iDisplayLength: 10,
            });
        })

        function deleteLink(id) {
            Swal.fire({
                text: 'Nationalität löschen?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Ja',
                cancelButtonText: 'Nein'
            }).then(function (result) {
                if (result.value) {
                    var url = appRootPath + '/api/NationalityApi/' + id;
                    $.ajax({
                        url: url,
                        type: 'POST',
                        async: false,
                        statusCode: {
                            404: function () {
                                alert("function not found");
                            }
                        },
                        success: function () {
                            $('#nationalitiesIndex').DataTable().ajax.reload();
                            Swal.fire({
                                icon: 'success',
                                text: 'Nationalität erfolgreich gelöscht.',
                                showConfirmButton: false,
                                timer: 2000
                            })
                        },
                        error: function (response) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Nationalität konnte nicht gelöscht werden!',
                                footer: response.responseText
                            })
                        }
                    })
                };
            });
        };
    </script>
}