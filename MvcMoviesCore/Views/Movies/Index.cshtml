@model IEnumerable<MvcMoviesCore.Models.Movies>

@{
    ViewData["Title"] = "Movies";
}

<h2>Movies</h2>
<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table table-striped cell-border table-hover compact" cellspacing="0" style="width: 100%; word-wrap:break-word; table-layout: auto;" id="movieIndex">
    <thead>
        <tr>
            <th>
                Film
            </th>
            <th>
                Erscheinungsjahr
            </th>
            <th>
                Vorhanden
            </th>
            <th>
                Laufzeit
            </th>
            <th>
                On View
            </th>
            <th width="240px">
                zuletzt gesehen
            </th>
            <th>
                Genre
            </th>
            <th>
                Speichermedium
            </th>
            <th>
                Speicherort
            </th>
            <th>
                Filegröße [kb]
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td width="300px">
                    <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.YearOfPublication)
                </td>
                <td>
                    @if (item.InStock != null && item.InStock.Value)
                    {
                        <i class="fa-solid fa-check" style="color: #74C0FC;"></i>
                    }
                    else
                    {
                        <i class="fa-solid fa-xmark" style="color: #ff0000;"></i>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RunTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OnWatch)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastView)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RecordCarrier.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StorageLocation.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FileSizeInKB)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id"><i class="fa-solid fa-pen fa-bounce" style="color: #74C0FC;  --fa-animation-duration: 2s;"></i></a>
                </td>
                <td>
                    <a asp-action="Delete" asp-route-id="@item.Id"><i class="fa-regular fa-trash-can fa-shake" style="color: #ff0000; --fa-animation-duration: 2s;"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts
{
    <partial name="_DataTableScripts" />

    <script>
        $(document).ready(function () {
            $('#movieIndex').DataTable({
                // ajax: {
                //     url: appRootPath + '/api/MoviesApi/GetMovies',
                //     dataSrc: ''
                // },
                // columns:[
                //     {
                //         data: 'Name',
                //         render: function (data, type, full, meta) {
                //             if (data && type === 'display') {
                //                 var url = '@Url.Action("Details", "Movies")' + '/' + full.Id;
                //                 return '<a href="' + url + '">' + full.Name; /*  + '< /a>'; */
                //             }
                //             return '';
                //         }
                //     },
                //     { data: 'YearOfPublication' },
                //     { 
                //         data: 'InStock',
                //         render: function (data, type, full, meta) {
                //             if (data && type === 'display' && full.InStock) {
                //                 return '<i class="fa-duotone fa-check" style="--fa-primary-color: #74C0FC;"></i>';
                //             }
                //             return '<i class="fa-duotone fa-xmark" style="--fa-primary-color: #ff0000; --fa-secondary-color: #ff0000;"></i>';
                //         }
                            
                //     },
                //     { data: 'RunTime' },
                //     { data: 'OnWatch' },
                //     { data: 'LastView' },
                //     { data: 'Genre.Name' },
                //     { data: 'RecordCarrier.Name' },
                //     { data: 'StorageLocation.Name' },
                //     { data: 'FileSizeInKB' },
                //     { data: 'Id' },
                //     { data: 'Id' },
                // ],
                ordering: true,
                createdRow: function (row, data, dataIndex) {
                    if (data['adult'] === false) {
                        $(row).css("background-color", "green");
                    }
                },
                fixedHeader: {
                    header: true,
                    footer: false
                },
                columnDefs: [{ width: 400, targets: 9 }],
                searchHighlight: true,
            });
        })
    </script>
}