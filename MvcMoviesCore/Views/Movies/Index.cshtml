@model IEnumerable<MvcMoviesCore.Models.Movies>

@{
    ViewData["Title"] = "Movies";
}

<h2>Movies</h2>
<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table table-striped cell-border table-hover compact" cellspacing="0" style="width: 100%; word-wrap:break-word; table-layout: auto;" id="movieIndex">
    <thead>
        <tr>
            <th width="20%">Film</th>                   @* #00 *@
            <th>Erscheinungsjahr</th>                   @* #01 *@
            <th>Vorhanden</th>                          @* #02 *@
            <th>Laufzeit</th>                           @* #03 *@
            <th>Bewrtg.</th>                            @* #04 *@
            <th width="220px">zuletzt gesehen</th>      @* #05 *@
            <th>Genre</th>                              @* #06 *@
            <th>Speichermedium</th>                     @* #07 *@
            <th>Speicherort</th>                        @* #08 *@
            <th width="200px">Filegröße [kb]</th>       @* #09 *@
            <th width="3%">&nbsp;</th>                  @* #10 *@
            <th width="3%">&nbsp;</th>                  @* #11 *@
        </tr>
    </thead>
</table>

@section Scripts
{
    <partial name="_DataTableScripts" />

    <script>
        $(document).ready(function () {
            var table = $('#movieIndex').DataTable({
                ajax: {
                    url: appRootPath + '/api/MoviesApi/GetMovies',
                    dataSrc: ''
                },
                columns: [
                    {
                        data: 'Name',
                        render: function (data, type, full) {
                            if (data && type === 'display') {
                                var url = '@Url.Action("Details", "Movies")' + '/' + full.Id;
                                return '<a href="' + url + '" title="Details ansehen">' + full.Name; /*  + '< /a>'; */
                            }
                            return '';
                        },
                        type: 'html',
                        searchable: true
                    },
                    {
                        data: 'YearOfPublication',
                        render: function (data, type) {
                            if (data && type === 'display') {
                                let yearOfPublication = new Date(data);
                                return yearOfPublication.getUTCFullYear();
                            }
                            return '';
                        },
                        type: 'num',
                        className: 'dt-body-right'
                    },
                    {
                        data: 'InStock',
                        render: function (data, type, full) {
                            if (data && type === 'display' && full.InStock) {
                                return '<i class="fa-solid fa-check" style="color: #74C0FC;"></i>';
                            }
                            return '<i class="fa-solid fa-xmark" style="color: #ff0000"></i>';
                        },
                        type: 'html',
                        className: 'dt-body-center'
                    },
                    {
                        data: 'RunTime',
                        render: ['number', '.', ',', 1],
                        className: 'dt-body-right'
                    },
                    { data: 'Ranking', type: 'num', className: 'dt-body-center' },
                    {
                        data: 'LastView',
                        render: function (data, type) {
                            if (type === 'sort'){
                                return data
                            }
                            return data ? moment(data).format('L') : "";
                        },
                        type: 'date',
                        className: 'dt-body-center'
                    },
                    { data: 'Genre.Name' },
                    { data: 'RecordCarrier.Name' },
                    { data: 'StorageLocation.Name' },
                    { data: 'FileSizeInKB', render: ['number', '.', ',', 0], className: 'dt-body-right' },
                    {
                        data: 'Id',
                        orderable: false,
                        searchable: false,
                        render: function (data, type) {
                            if (data && type === 'display') {
                                var url = '@Url.Action("Edit", "Movies")' + '/' + data;
                                return '<a href = "' + url + '" titel="Details zeigen">' +
                                    '<i class="fa-solid fa-pen fa-bounce" style="color: #74C0FC;  --fa-animation-duration: 2s;"></i>';
                            }
                            return '';
                        },
                        type: 'html',
                        className: 'dt-body-center'
                    },
                    {
                        data: 'Id',
                        orderable: false,
                        searchable: false,
                        render: function (data, type) {
                            if (data && type === 'display') {
                                var id = "'" + data + "'";
                                return '<button name="id" style="background-color: transparent; color: red; border: hidden" onClick="deleteMovie(' + id + ')" title="Film löschen">' +
                                    '<i class="fa-regular fa-trash-can fa-shake" style="color: #ff0000; --fa-animation-duration: 2s;"></i>';
                            }
                            return '';
                        },
                        type: 'html',
                        className: 'dt-body-center'
                    },
                ],
                ordering: true,
                searchable: true,
                bSearchable: true,
                // createdRow: function (row, data, dataIndex) {
                //     if (data['adult'] === false) {
                //         $(row).css("background-color", "green");
                //     }
                // },
                fixedHeader: {
                    header: true,
                    footer: false
                },
                searchHighlight: true,
            });

            $("#movieIndex tfoot th").each( function ( i ) {
                var select = $('<select><option value=""></option></select>')
                    .appendTo( $(this).empty() )
                    .on( 'change', function () {
                        table.column( i )
                            .search( $(this).val() )
                            .draw();
                    });
                table.column( i ).data().unique().sort().each( function ( d, j ) {
                    select.append( '<option value="'+d+'">'+d+'</option>' )
                });
            });
        })

        function deleteMovie(id) {
            Swal.fire({
                text: 'Film löschen?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Ja',
                cancelButtonText: 'Nein'
            }).then(function (result) {
                if (result.value) {
                    var url = appRootPath + '/api/MoviesApi/DeleteMovie/' + id;
                    $.ajax({
                        url: url,
                        type: 'POST',
                        async: false,
                        statusCode: {
                            404: function () {
                                alert("function not found");
                            }
                        },
                        success: function () {
                            $('#movieIndex').DataTable().ajax.reload();
                            Swal.fire({
                                icon: 'success',
                                text: 'Film wurde gelöscht.',
                                showConfirmButton: false,
                                timer: 2000
                            })
                        },
                        error: function (response) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Film konnte nicht gelöscht werden!',
                                footer: response.responseText
                            })
                        }
                    })
                };
            });
        };
    </script>
}