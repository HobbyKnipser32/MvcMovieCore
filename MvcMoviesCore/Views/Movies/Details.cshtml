@model MvcMoviesCore.Models.Movies

@{
    ViewData["Title"] = "Details";
    var imageSource = ViewData["ImageSource"];
}
<div class="container-fluid">
    <h2>@Html.DisplayFor(model => model.Name)</h2>

    <div>
        <input type="hidden" value="@Model.Id" id="movieID" />
        <hr />
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="form-group col-md-3">
                        <label asp-for="YearOfPublication" class="control-label">Erscheinungsjahr: </label>
                        @Html.DisplayFor(model => model.YearOfPublication)
                    </div>
                    <div class="form-group col-md-3">
                        <label asp-for="Genre" class="control-label">Genre: </label>
                        @Html.DisplayFor(model => model.Genre.Name)
                    </div>
                    <div class="form-group col-md-3">
                        <label asp-for="RecordCarrier.Name" class="control-label">Datenträger: </label>
                        @Html.DisplayFor(model => model.RecordCarrier.Name)
                    </div>
                    <div class="form-group col-md-3">
                        <label asp-for="InStock" class="control-label">vorhanden: </label>
                        @Html.CheckBox("inStock", Model.InStock.GetValueOrDefault())
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="row">
                    <div class="form-group col-md-3">
                        <label asp-for="StorageLocation" class="control-label">Lagerort: </label>
                        @Html.DisplayFor(model => model.StorageLocation.Name)
                    </div>
                    <div class="form-group col-md-3">
                        @if (Model.Added == null || Model.Added == DateTime.MinValue)
                        {
                            <label asp-for="CreateDate" class="control-label">hinzugefügt: </label>
                            @Html.DisplayFor(model => model.CreateDate)
                        }
                        else
                        {
                            <label asp-for="Added" class="control-label">hinzugefügt: </label>
                            @Html.DisplayFor(model => model.Added)
                        }
                    </div>
                    <div class="form-group col-md-3">
                        <label asp-for="OnWatch" class="control-label">auf der Uhr: </label>
                        @Html.DisplayFor(model => model.OnWatch)
                    </div>
                    <div class="form-group col-md-3">
                        <label asp-for="LastView" class="control-label">zuletzt gesehen: </label>
                        @Html.DisplayFor(model => model.LastView)
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="row">
                    <div class="form-group col-md-3">
                        <label asp-for="IMDB" class="control-label">IMDB: </label>
                        @Html.DisplayFor(model => model.IMDB)
                    </div>
                    <div class="form-group col-md-3">
                        <label asp-for="Ranking" class="control-label">Wertung: </label>
                        @Html.DisplayFor(model => model.Ranking)
                    </div>
                    <div class="form-group col-md-6">
                        <label asp-for="Remark" class="control-label">Bemerkung: </label>
                        @Html.DisplayFor(model => model.Remark)
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="row">
                    <div class="form-group col-md-12">
                        <label asp-for="ShortDescription" class="control-label">Kurzbescheibung:</label>
                        @Html.DisplayFor(model => model.ShortDescription)
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="row">
                    <div class="form-group col-md-3">
                        <label asp-for="RunTime" class="control-label">Laufzeit: </label>
                        @Html.DisplayFor(model => model.RunTime)

                    </div>
                    <div class="form-group col-md-3">
                        <label asp-for="FileSize" class="control-label">Dateigröße [kb]: </label>
                        @Html.DisplayFor(model => model.FileSizeInKB)
                    </div>
                    <div class="form-group col-md-6">
                        <label asp-for="FilePath" class="control-label">Dateipfad: </label>
                        @Html.DisplayFor(model => model.FilePath)

                    </div>
                </div>
            </div>
        </div>
        <p>
            <a asp-action="Edit" asp-route-id="@Model.Id">
                <i class="fa-solid fa-pen fa-bounce" style="color: #74C0FC;  --fa-animation-duration: 2s;"></i>
            </a>
        </p>
        <hr />
        <ul class="nav nav-tabs">
            <li>
                <a data-toggle="tab" href="#actorsTab" class="nav-link nav-link-teal active" style="border: 1px solid #00677f">Darsteller</a>
            </li>
            <li>
                <a data-toggle="tab" href="#scenesTab" class="nav-link nav-link-violett" style="border: 1px solid rgb(108, 27, 123)">Szenen</a>
            </li>
        </ul>
        <div class="tab-content">
            <div id="actorsTab" class="tab-pane active">
                <hr />
                <h4>Darsteller</h4>
                <table class="material-datatables table hover cell-border compact stripe" id="movieDetails">
                    <thead>
                        <tr>
                            <th class="disabled-sorting"></th>
                            <th>Name</th>
                            <th>Geschlecht</th>
                            <th>Alter beim Dreh</th>
                            @if (Model.Adult)
                            {
                                <th>Praxis</th>
                            }
                            else
                            {
                                <th>Rolle</th>
                            }
                            <th></th>
                        </tr>
                    </thead>
                </table>
            </div>
            <div id="scenesTab" class="tab-pane">
                @if (Model.Scenes != null && Model.Scenes.Any())
                {
                    <hr />
                    @* <h4>Szenen Aufschlüsselung</h4> *@
                    <table class="table hover cell-border stripe" id="scenesTable">
                        <thead style="display: none">
                            <tr>
                                <th>Szenen</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var i = 0;
                            }
                            @foreach (var scene in Model.Scenes.GroupBy(g => g.Nr).OrderBy(o => o.Key))
                            {
                                var j = 0;
                                var count = 0;
                                <tr>
                                    <td style="background-color:@(i % 2 == 0 ? "lightblue" : "lightgray"); width: 600px">
                                        Szene @Html.DisplayTextFor(model => scene.Key):&nbsp;
                                        @{
                                            var s = Model.Scenes.Where(w => w.Nr == scene.Key).OrderBy(o => o.Classification).ThenBy(o => o.Name).ToList();
                                            count = s.Count();
                                        }
                                        @foreach (var t in s)
                                        {
                                            if (t.Classification < 8)
                                            {
                                                <b>
                                                    @Html.DisplayTextFor(model => t.Name)
                                                </b>
                                            }
                                            else
                                            {
                                                @Html.DisplayTextFor(model => t.Name)

                                            }
                                            j++;
                                            if (j < count)
                                            {
                                                <text>
                                                    ;&nbsp;
                                                </text>
                                            }
                                        }
                                    </td>
                                </tr>
                                i++;
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
        <hr />
        <p>
            <a asp-action="Index" title="zurück zur Liste">
                <i class="fa-regular fa-circle-left fa-shake fa-2xl" style="color: #74C0FC; --fa-animation-duration: 2s;"></i>
            </a>
            |
            <a title="löschen" onclick="deleteMovie('@Model.Id')">
                <i class="fa-solid fa-trash fa-fade" style="color: #ff0000; --fa-animation-duration: 2s;"></i>
            </a>
        </p>
    </div>
</div>
@section Scripts
{
    <partial name="_DataTableScripts" />
    <partial name="_ShowImageModalScripts" />


    <script>
        $(document).ready(function () {
            const movieId = '@Model.Id';
            $('#movieDetails').DataTable({
                ajax: {
                    url: appRootPath + '/api/MoviesApi/' + movieId,
                    dataSrc: ''
                },
                columns: [
                    {
                        data: 'Person.PersonImages',
                        render: function (data, type, full) {
                            if (type === 'display') {
                                if (data && data.length > 0) {
                                    var src = '@imageSource/' + data[0].PersonId + '/' + data[0].Name
                                    return '<div class="image-container">'
                                        + '<img src="' + src + '" class="image-small" style="height: 40px">'
                                        + '<img src="' + src + '" class="image-large">'
                                        + '</div>';
                                }
                                else {
                                    return '<div class="image-container">'
                                        + '<img src="/images/noimageexists.png" class="image-small" style="height: 40px" />'
                                        + '</div>';

                                }
                            }
                            return '';
                        },
                        orderable: false,
                        ordering: false
                    },
                    {
                        data: 'Person',
                        render: function (data, type, full, meta) {
                            if (data && type === 'display') {
                                var url = '@Url.Action("Details", "Person")' + '/' + data.Id;
                                return '<a href="' + url + '">' + data.Name;
                            }
                            return '';
                        },
                        type: 'html'
                    },

                    { 
                        data: 'Person.Sex.Name',
                        type: 'html'
                    },
                    { 
                        data: 'Person.ActorsAge',
                        type: 'html-num'
                    },
                    {
                        data: 'Practices',
                        render: function (data, type, full) {
                            if (type === 'display') {
                                if (data) {
                                    return full["Practices"];
                                }
                                else if (full['MovieRole']) {
                                    return full['MovieRole'].Name;
                                }
                            }
                            return "";
                        },
                        type: 'html'
                    },
                    {
                        data: 'Id',
                        render: function (data, type, full) {
                            if (data && type === 'display') {
                                var id = "'" + data + "'";
                                var actor = "'" + full.Person.Name + "'";
                                return '<button name="id" style="background-color: transparent; color: red; border: hidden" onClick="deleteLink(' + id + ', ' + actor + ')" title="Verknüpfung löschen">' +
                                    '<i class="fa-solid fa-eraser fa-fade" style="color: #ff0000; --fa-animation-duration: 2s;"></i>';
                            }
                            return '';
                        },
                    }
                ],
                ordering: true,
                order: [[1, 'asc']],
                info: false,
                paging: false,
                bFilter: false,
                lengthMenu: [[10, 20, 50, 100, -1], [10, 20, 50, 100, "All"]],
                iDisplayLength: -1,
                fixedHeader: {
                    header: true,
                    footer: false
                },
                // columnDefs: [{ className: 'compact', targets: [0] }],
                searchHighlight: true
            });

            $('#movieDetails tbody').on('mouseenter', '.image-container', function () {
                onMouseEnter(this);
            });

            $('#movieDetails tbody').on('mouseleave', '.image-container', function () {
                onMouseLeave(this);
            });
        });

        function deleteLink(id, actor) {
            Swal.fire({
                // text: 'Verknüpfung mit ' + actor + ' löschen?',
                html: 'Verknüpfung mit <b>' + actor + '</b> löschen?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Ja',
                cancelButtonText: 'Nein'
            }).then(function (result) {
                if (result.value) {
                    var url = appRootPath + '/api/MoviesApi/' + id;
                    $.ajax({
                        url: url,
                        type: 'POST',
                        async: false,
                        statusCode: {
                            404: function () {
                                alert("function not found");
                            }
                        },
                        success: function () {
                            $('#movieDetails').DataTable().ajax.reload();
                            Swal.fire({
                                icon: 'success',
                                text: 'Verknüpfung erfolgreich gelöscht.',
                                showConfirmButton: false,
                                timer: 2000
                            })
                        },
                    })
                };
            });
        };

        function deleteMovie(id){
            Swal.fire({
                html: 'Film löschen?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Ja',
                cancelButtonText: 'Nein'
            }).then(function (result) {
                if (result.value) {
                    var url = appRootPath + '/api/MoviesApi/DeleteMovie/' + id;
                    $.ajax({
                        url: url,
                        type: 'POST',
                        async: false,
                        statusCode: {
                            404: function () {
                                alert("function not found");
                            }
                        },
                        success: function () {
                            window.history.back();
                            // $('#movieDetails').DataTable().ajax.reload();
                            // Swal.fire({
                            //     icon: 'success',
                            //     text: 'Verknüpfung erfolgreich gelöscht.',
                            //     showConfirmButton: false,
                            //     timer: 2000
                            // })
                        },
                    })
                };
            });
        };
    </script>
}